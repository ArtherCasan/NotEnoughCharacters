buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "github"
            url = "https://github.com/juanmuscaria/maven/raw/master"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'com.github.GTNewHorizons:ForgeGradle:1.2.5'
    }
}


apply plugin: 'forge'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

version = mod_version
group = mod_group
archivesBaseName = mod_archives_name

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
    replace "@VERSION@", project.version
}


repositories {
    mavenCentral()
    maven {
        name 'chickenbones'
        url 'http://chickenbones.net/maven'
    }
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'libs'
    }
}

configurations {
    // configuration that holds jars to include in the jar
    shade
    compile.extendsFrom shade
}

dependencies {

    compile 'codechicken:NotEnoughItems:1.7.10-2.0.0-GTNH:dev'
    compile 'codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev'
    compile 'codechicken:CodeChickenCore:1.7.10-1.0.7.+:dev'

    shade "com.github.towdium:pinin:${verpinin}"

}

processResources {

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version,
                'mod_id': mod_id,
                'mod_name': mod_name,
                'mod_author': mod_author,
                'mod_description': mod_description,
                'mc_version': mc_version,
                'mod_credits': mod_credits,
                'mod_version': mod_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar) {
    classifier = 'dev'
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives devJar
    archives sourcesJar
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }

    manifest.attributes(
            'FMLCorePlugin': 'net.vfyjxf.nechar.core.NechCorePlugin',
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true'
    )

    appendix project.minecraft.version
}
